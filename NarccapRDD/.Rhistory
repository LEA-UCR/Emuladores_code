usethis::use_r()
usethis::use_r("Visualizations")
use_package("ggmap")
install.packages(ggmap)
install.packages("ggmap")
use_package("ggmap")
use_package("ggplot2")
use_package("ggplot2")
use_package(ggmap)
use_package("ggmap")
use_package("dpyr")
use_package("dplyr")
use_package("dplyr")
use_package("dplyr")
create_description()
devtools::check()
read.dcf()
read.dcf("Description")
read.dcf("NAMESPACE")
read.dcf()
devtools::check()
devtools::check()
devtools::document()
load_all()
load_all()
document()
C <- 1:10
as.name("C")
eval(as.name("C"))
mean("C")
mean(as.name("C"))
mean(eval(as.name("C")))
PATH <- "~/"
dirbaseregional <- PATH
listfilesregional <- list.files(path = dirbaseregional)[str_detect(list.files(path = dirbaseregional),'nc$')]
library(ncdf4)
library(tidyverse)
PATH <- "~/"
dirbaseregional <- PATH
listfilesregional <- list.files(path = dirbaseregional)[str_detect(list.files(path = dirbaseregional),'nc$')]
varreg <- NULL
blatitudet <- NULL
blongitudet <- NULL
c1 <- separate(tibble(listfilesregional),1, sep="_", as.character(c(1:4))) %>% select("1")
c1 <- paste(c1[1,1])
i <- 1
show(paste0('Construccion datos mensuales-Regional-',i))
regional <- ncdf4::nc_open(paste0(dirbaseregional,listfilesregional[i]))  ##Leemos el archivo .nc utilizando la lista previamente creada
varreg_pre <- ncdf4::ncvar_get(regional,c1)
lonvar <- ncdf4::ncvar_get(regional,'lon')
latvar <- ncdf4::ncvar_get(regional,'lat')
xcvar <- ncdf4::ncvar_get(regional,'xc')
ycvar <- ncdf4::ncvar_get(regional,'yc')
timevar <- ncdf4::ncvar_get(regional,'time')  ##Hasta acá lo que se hace es obtener las variables espaciales, temporales y la de interés del archivo de datos
blatitude <- c(min(latvar)-1.4,floor(max(latvar))+1.4)
blatitudet <- rbind(blatitudet,blatitude)
blongitude <- c(min(lonvar)-1.4,floor(max(lonvar))+1.4)
blongitudet <- rbind(blongitudet,blongitude)
fechabase <- lubridate::ymd('1968-01-01') ##Se establece la fecha desde la que comienza a contar el tiempo en el modelo
timevar <- fechabase+lubridate::as.period(ddays(timevar)) ##Transforma la variable de tiempo a formato Año mes día
dimnames(varreg_pre)[[1]] <- xcvar
library(lubridate)
fechabase <- lubridate::ymd('1968-01-01') ##Se establece la fecha desde la que comienza a contar el tiempo en el modelo
timevar <- fechabase+lubridate::as.period(ddays(timevar)) ##Transforma la variable de tiempo a formato Año mes día
dimnames(varreg_pre)[[1]] <- xcvar
dimnames(varreg_pre)[[2]] <- ycvar
dimnames(varreg_pre)[[3]] <- as.character(timevar) ##Define nombres a los ejes del conjunto de los datos
varreg_pre <- reshape2::melt(varreg_pre) ##Reorganiza los datos
dimnames(latvar)[[1]] <- xcvar
dimnames(lonvar)[[1]] <- xcvar
dimnames(latvar)[[2]] <- ycvar
dimnames(lonvar)[[2]] <- ycvar
latlondata <- expand.grid(xcvar,ycvar)
latlondatapre <- t(sapply(X=1:dim(latlondata)[1], FUN = function(x) return(c(latvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])],lonvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])]))))
latlondata <- cbind(latlondata,latlondatapre)
colnames(latlondata) <- c('xc','yc','lat','lon')
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()  ##Convierte la variable time en tres variables que indican el año y mes y saca la media de las observaciones para ese mes.
varreg_pre <- varreg_pre %>% left_join(latlondata,by = c('xc', 'yc')) %>%
select(-xc,-yc) ##Une al cuadro las variables espaciales
varreg
varreg_pre
varreg_pre <- ncdf4::ncvar_get(regional,c1)
varreg_pre <- reshape2::melt(varreg_pre) ##Reorganiza los datos
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
colnames(varreg_pre)
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()  ##Convierte la variable time en tres variables que indican el año y mes y saca la media de las observaciones para ese mes.
colnames(varreg_pre)
PATH <- "~/"
dirbaseregional <- PATH
listfilesregional <- list.files(path = dirbaseregional)[str_detect(list.files(path = dirbaseregional),'nc$')]
varreg <- NULL
blatitudet <- NULL
blongitudet <- NULL
c1 <- separate(tibble(listfilesregional),1, sep="_", as.character(c(1:4))) %>% select("1")
c1 <- paste(c1[1,1])
i <- 1
show(paste0('Construccion datos mensuales-Regional-',i))
regional <- ncdf4::nc_open(paste0(dirbaseregional,listfilesregional[i]))  ##Leemos el archivo .nc utilizando la lista previamente creada
varreg_pre <- ncdf4::ncvar_get(regional,c1)
lonvar <- ncdf4::ncvar_get(regional,'lon')
latvar <- ncdf4::ncvar_get(regional,'lat')
xcvar <- ncdf4::ncvar_get(regional,'xc')
ycvar <- ncdf4::ncvar_get(regional,'yc')
timevar <- ncdf4::ncvar_get(regional,'time')  ##Hasta acá lo que se hace es obtener las variables espaciales, temporales y la de interés del archivo de datos
blatitude <- c(min(latvar)-1.4,floor(max(latvar))+1.4)
blatitudet <- rbind(blatitudet,blatitude)
blongitude <- c(min(lonvar)-1.4,floor(max(lonvar))+1.4)
blongitudet <- rbind(blongitudet,blongitude)
fechabase <- lubridate::ymd('1968-01-01') ##Se establece la fecha desde la que comienza a contar el tiempo en el modelo
timevar <- fechabase+lubridate::as.period(ddays(timevar)) ##Transforma la variable de tiempo a formato Año mes día
dimnames(varreg_pre)[[1]] <- xcvar
dimnames(varreg_pre)[[2]] <- ycvar
dimnames(varreg_pre)[[3]] <- as.character(timevar) ##Define nombres a los ejes del conjunto de los datos
varreg_pre <- reshape2::melt(varreg_pre) ##Reorganiza los datos
dimnames(latvar)[[1]] <- xcvar
dimnames(lonvar)[[1]] <- xcvar
dimnames(latvar)[[2]] <- ycvar
dimnames(lonvar)[[2]] <- ycvar
latlondata <- expand.grid(xcvar,ycvar)
latlondatapre <- t(sapply(X=1:dim(latlondata)[1], FUN = function(x) return(c(latvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])],lonvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])]))))
latlondata <- cbind(latlondata,latlondatapre)
colnames(latlondata) <- c('xc','yc','lat','lon')
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()
varreg_pre
unique(varreg_pre$xc)
unique(latlondata$xc)
unique(latlondata$yc)
unique(varreg_pre$yc)
latlondata
varreg_pre <- varreg_pre %>% left_join(latlondata,by = c('xc', 'yc')) %>%
select(-xc,-yc) ##Une al cuadro las variables espaciales
varreg_pre
varreg_pre <- varreg_pre %>% mutate(ID = rep(i, dim(varreg_pre)[1]))
varreg <- bind_rows(varreg,varreg_pre) ##Uno los datos del archivo con los que fueron trabajados anteriormente en el ciclo.
a <- group_by(varreg,Year, Month, lat,lon) %>% summarize(n= n())
repetidos <- subset(a, n!=1)
a <- unique(repetidos$Year)
ids <- as.numeric(unique(varreg$ID))[-(length(a)+1)]
for (i in 1:length(ids)){
varreg <- subset(varreg, !(Year==a[i]&Month==1&ID==ids[i]))
}
a[1]
assign(paste(c1, "Regional"),varreg)
varreg <- NULL
varreg <- bind_rows(varreg,varreg_pre) ##Uno los datos del archivo con los que fueron trabajados anteriormente en el ciclo.
assign(paste(c1, "Regional"),varreg)
(length(a)
)
PATH <- "~/"
dirbaseregional <- PATH
listfilesregional <- list.files(path = dirbaseregional)[str_detect(list.files(path = dirbaseregional),'nc$')]
varreg <- NULL
blatitudet <- NULL
blongitudet <- NULL
c1 <- separate(tibble(listfilesregional),1, sep="_", as.character(c(1:4))) %>% select("1")
c1 <- paste(c1[1,1])
i <- 1
show(paste0('Construccion datos mensuales-Regional-',i))
regional <- ncdf4::nc_open(paste0(dirbaseregional,listfilesregional[i]))  ##Leemos el archivo .nc utilizando la lista previamente creada
varreg_pre <- ncdf4::ncvar_get(regional,c1)
lonvar <- ncdf4::ncvar_get(regional,'lon')
latvar <- ncdf4::ncvar_get(regional,'lat')
xcvar <- ncdf4::ncvar_get(regional,'xc')
ycvar <- ncdf4::ncvar_get(regional,'yc')
timevar <- ncdf4::ncvar_get(regional,'time')  ##Hasta acá lo que se hace es obtener las variables espaciales, temporales y la de interés del archivo de datos
blatitude <- c(min(latvar)-1.4,floor(max(latvar))+1.4)
blatitudet <- rbind(blatitudet,blatitude)
blongitude <- c(min(lonvar)-1.4,floor(max(lonvar))+1.4)
blongitudet <- rbind(blongitudet,blongitude)
fechabase <- lubridate::ymd('1968-01-01') ##Se establece la fecha desde la que comienza a contar el tiempo en el modelo
timevar <- fechabase+lubridate::as.period(ddays(timevar)) ##Transforma la variable de tiempo a formato Año mes día
dimnames(varreg_pre)[[1]] <- xcvar
dimnames(varreg_pre)[[2]] <- ycvar
dimnames(varreg_pre)[[3]] <- as.character(timevar) ##Define nombres a los ejes del conjunto de los datos
varreg_pre <- reshape2::melt(varreg_pre) ##Reorganiza los datos
dimnames(latvar)[[1]] <- xcvar
dimnames(lonvar)[[1]] <- xcvar
dimnames(latvar)[[2]] <- ycvar
dimnames(lonvar)[[2]] <- ycvar
latlondata <- expand.grid(xcvar,ycvar)
latlondatapre <- t(sapply(X=1:dim(latlondata)[1], FUN = function(x) return(c(latvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])],lonvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])]))))
latlondata <- cbind(latlondata,latlondatapre)
colnames(latlondata) <- c('xc','yc','lat','lon')
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()  ##Convierte la variable time en tres variables que indican el año y mes y saca la media de las observaciones para ese mes.
varreg_pre <- varreg_pre %>% left_join(latlondata,by = c('xc', 'yc')) %>%
select(-xc,-yc) ##Une al cuadro las variables espaciales
varreg_pre
varreg_pre <- varreg_pre %>% mutate(ID = rep(i, dim(varreg_pre)[1]))
varreg <- bind_rows(varreg,varreg_pre)
assign(paste(c1, "Regional"),varreg)
rm(varreg)
View(regional)
NC2DFR <- function(PATH){
dirbaseregional <- PATH
listfilesregional <- list.files(path = dirbaseregional)[str_detect(list.files(path = dirbaseregional),'nc$')]
varreg <- NULL
blatitudet <- NULL
blongitudet <- NULL
c1 <- separate(tibble(listfilesregional),1, sep="_", as.character(c(1:4))) %>% select("1")
c1 <- paste(c1[1,1])
for(i in 1:length(listfilesregional)){
show(paste0('Construccion datos mensuales-Regional-',i))
regional <- ncdf4::nc_open(paste0(dirbaseregional,listfilesregional[i]))  ##Leemos el archivo .nc utilizando la lista previamente creada
varreg_pre <- ncdf4::ncvar_get(regional,c1)
lonvar <- ncdf4::ncvar_get(regional,'lon')
latvar <- ncdf4::ncvar_get(regional,'lat')
xcvar <- ncdf4::ncvar_get(regional,'xc')
ycvar <- ncdf4::ncvar_get(regional,'yc')
timevar <- ncdf4::ncvar_get(regional,'time')  ##Hasta acá lo que se hace es obtener las variables espaciales, temporales y la de interés del archivo de datos
blatitude <- c(min(latvar)-1.4,floor(max(latvar))+1.4)
blatitudet <- rbind(blatitudet,blatitude)
blongitude <- c(min(lonvar)-1.4,floor(max(lonvar))+1.4)
blongitudet <- rbind(blongitudet,blongitude)
fechabase <- lubridate::ymd('1968-01-01') ##Se establece la fecha desde la que comienza a contar el tiempo en el modelo
timevar <- fechabase+lubridate::as.period(ddays(timevar)) ##Transforma la variable de tiempo a formato Año mes día
dimnames(varreg_pre)[[1]] <- xcvar
dimnames(varreg_pre)[[2]] <- ycvar
dimnames(varreg_pre)[[3]] <- as.character(timevar) ##Define nombres a los ejes del conjunto de los datos
varreg_pre <- reshape2::melt(varreg_pre) ##Reorganiza los datos
dimnames(latvar)[[1]] <- xcvar
dimnames(lonvar)[[1]] <- xcvar
dimnames(latvar)[[2]] <- ycvar
dimnames(lonvar)[[2]] <- ycvar
latlondata <- expand.grid(xcvar,ycvar)
latlondatapre <- t(sapply(X=1:dim(latlondata)[1], FUN = function(x) return(c(latvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])],lonvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])]))))
latlondata <- cbind(latlondata,latlondatapre)
colnames(latlondata) <- c('xc','yc','lat','lon')
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()  ##Convierte la variable time en tres variables que indican el año y mes y saca la media de las observaciones para ese mes.
varreg_pre <- varreg_pre %>% left_join(latlondata,by = c('xc', 'yc')) %>%
select(-xc,-yc) ##Une al cuadro las variables espaciales
varreg_pre
varreg_pre <- varreg_pre %>% mutate(ID = rep(i, dim(varreg_pre)[1]))
varreg <- bind_rows(varreg,varreg_pre) ##Uno los datos del archivo con los que fueron trabajados anteriormente en el ciclo.
}
a <- group_by(varreg,Year, Month, lat,lon) %>% summarize(n= n())
repetidos <- subset(a, n!=1)
a <- unique(repetidos$Year)
ids <- as.numeric(unique(varreg$ID))[-(length(a)+1)]
for (i in 1:length(ids)){
varreg <- subset(varreg, !(Year==a[i]&Month==1&ID==ids[i]))
}
assign(x=paste(c1, "Regional"),value=varreg)
rm(varreg)
}
NC2DFR("~/")
NC2DFR <- function(PATH){
dirbaseregional <- PATH
listfilesregional <- list.files(path = dirbaseregional)[str_detect(list.files(path = dirbaseregional),'nc$')]
varreg <- NULL
blatitudet <- NULL
blongitudet <- NULL
c1 <- separate(tibble(listfilesregional),1, sep="_", as.character(c(1:4))) %>% select("1")
c1 <- paste(c1[1,1])
for(i in 1:length(listfilesregional)){
show(paste0('Construccion datos mensuales-Regional-',i))
regional <- ncdf4::nc_open(paste0(dirbaseregional,listfilesregional[i]))  ##Leemos el archivo .nc utilizando la lista previamente creada
varreg_pre <- ncdf4::ncvar_get(regional,c1)
lonvar <- ncdf4::ncvar_get(regional,'lon')
latvar <- ncdf4::ncvar_get(regional,'lat')
xcvar <- ncdf4::ncvar_get(regional,'xc')
ycvar <- ncdf4::ncvar_get(regional,'yc')
timevar <- ncdf4::ncvar_get(regional,'time')  ##Hasta acá lo que se hace es obtener las variables espaciales, temporales y la de interés del archivo de datos
blatitude <- c(min(latvar)-1.4,floor(max(latvar))+1.4)
blatitudet <- rbind(blatitudet,blatitude)
blongitude <- c(min(lonvar)-1.4,floor(max(lonvar))+1.4)
blongitudet <- rbind(blongitudet,blongitude)
fechabase <- lubridate::ymd('1968-01-01') ##Se establece la fecha desde la que comienza a contar el tiempo en el modelo
timevar <- fechabase+lubridate::as.period(ddays(timevar)) ##Transforma la variable de tiempo a formato Año mes día
dimnames(varreg_pre)[[1]] <- xcvar
dimnames(varreg_pre)[[2]] <- ycvar
dimnames(varreg_pre)[[3]] <- as.character(timevar) ##Define nombres a los ejes del conjunto de los datos
varreg_pre <- reshape2::melt(varreg_pre) ##Reorganiza los datos
dimnames(latvar)[[1]] <- xcvar
dimnames(lonvar)[[1]] <- xcvar
dimnames(latvar)[[2]] <- ycvar
dimnames(lonvar)[[2]] <- ycvar
latlondata <- expand.grid(xcvar,ycvar)
latlondatapre <- t(sapply(X=1:dim(latlondata)[1], FUN = function(x) return(c(latvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])],lonvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])]))))
latlondata <- cbind(latlondata,latlondatapre)
colnames(latlondata) <- c('xc','yc','lat','lon')
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()  ##Convierte la variable time en tres variables que indican el año y mes y saca la media de las observaciones para ese mes.
varreg_pre <- varreg_pre %>% left_join(latlondata,by = c('xc', 'yc')) %>%
select(-xc,-yc) ##Une al cuadro las variables espaciales
varreg_pre
varreg_pre <- varreg_pre %>% mutate(ID = rep(i, dim(varreg_pre)[1]))
varreg <- bind_rows(varreg,varreg_pre) ##Uno los datos del archivo con los que fueron trabajados anteriormente en el ciclo.
}
a <- group_by(varreg,Year, Month, lat,lon) %>% summarize(n= n())
repetidos <- subset(a, n!=1)
a <- unique(repetidos$Year)
ids <- as.numeric(unique(varreg$ID))[-(length(a)+1)]
for (i in 1:length(ids)){
varreg <- subset(varreg, !(Year==a[i]&Month==1&ID==ids[i]))
}
assign(x=paste(c1, "Regional"),value=varreg)
}
NC2DFR("~/")
NC2DFR <- function(PATH){
dirbaseregional <- PATH
listfilesregional <- list.files(path = dirbaseregional)[str_detect(list.files(path = dirbaseregional),'nc$')]
varreg <- NULL
blatitudet <- NULL
blongitudet <- NULL
c1 <- separate(tibble(listfilesregional),1, sep="_", as.character(c(1:4))) %>% select("1")
c1 <- paste(c1[1,1])
for(i in 1:length(listfilesregional)){
show(paste0('Construccion datos mensuales-Regional-',i))
regional <- ncdf4::nc_open(paste0(dirbaseregional,listfilesregional[i]))  ##Leemos el archivo .nc utilizando la lista previamente creada
varreg_pre <- ncdf4::ncvar_get(regional,c1)
lonvar <- ncdf4::ncvar_get(regional,'lon')
latvar <- ncdf4::ncvar_get(regional,'lat')
xcvar <- ncdf4::ncvar_get(regional,'xc')
ycvar <- ncdf4::ncvar_get(regional,'yc')
timevar <- ncdf4::ncvar_get(regional,'time')  ##Hasta acá lo que se hace es obtener las variables espaciales, temporales y la de interés del archivo de datos
blatitude <- c(min(latvar)-1.4,floor(max(latvar))+1.4)
blatitudet <- rbind(blatitudet,blatitude)
blongitude <- c(min(lonvar)-1.4,floor(max(lonvar))+1.4)
blongitudet <- rbind(blongitudet,blongitude)
fechabase <- lubridate::ymd('1968-01-01') ##Se establece la fecha desde la que comienza a contar el tiempo en el modelo
timevar <- fechabase+lubridate::as.period(ddays(timevar)) ##Transforma la variable de tiempo a formato Año mes día
dimnames(varreg_pre)[[1]] <- xcvar
dimnames(varreg_pre)[[2]] <- ycvar
dimnames(varreg_pre)[[3]] <- as.character(timevar) ##Define nombres a los ejes del conjunto de los datos
varreg_pre <- reshape2::melt(varreg_pre) ##Reorganiza los datos
dimnames(latvar)[[1]] <- xcvar
dimnames(lonvar)[[1]] <- xcvar
dimnames(latvar)[[2]] <- ycvar
dimnames(lonvar)[[2]] <- ycvar
latlondata <- expand.grid(xcvar,ycvar)
latlondatapre <- t(sapply(X=1:dim(latlondata)[1], FUN = function(x) return(c(latvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])],lonvar[as.character(latlondata[x,1]),as.character(latlondata[x,2])]))))
latlondata <- cbind(latlondata,latlondatapre)
colnames(latlondata) <- c('xc','yc','lat','lon')
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()  ##Convierte la variable time en tres variables que indican el año y mes y saca la media de las observaciones para ese mes.
varreg_pre <- varreg_pre %>% left_join(latlondata,by = c('xc', 'yc')) %>%
select(-xc,-yc) ##Une al cuadro las variables espaciales
varreg_pre
varreg_pre <- varreg_pre %>% mutate(ID = rep(i, dim(varreg_pre)[1]))
varreg <- bind_rows(varreg,varreg_pre) ##Uno los datos del archivo con los que fueron trabajados anteriormente en el ciclo.
}
a <- group_by(varreg,Year, Month, lat,lon) %>% summarize(n= n())
repetidos <- subset(a, n!=1)
a <- unique(repetidos$Year)
ids <- as.numeric(unique(varreg$ID))[-(length(a)+1)]
for (i in 1:length(ids)){
varreg <- subset(varreg, !(Year==a[i]&Month==1&ID==ids[i]))
}
assign(x=paste(c1, "Regional"),value=varreg, envir = .GlobalEnv)
}
NC2DFR("~/")
library(NarccapRDD)
library(NarccapRDD)
remove.packages("NarccapRDD")
library(NarccapRDD)
library(NarccapRDD)
usethis::use_r()
install.packages(c("rstan", "rstanarm", "rstantools"))
datos <- data.frame(NA, ncol=3)
View(datos)
datos <- data.frame(A, B,C)
datos <- data.frame(A=1, B=2,C=3)
View(datos)
colnames(datos) <- c("Datos global", "datos regional", "datosglobal")
str_detect(colnames(datos), "global")
library(stringr)
library(tidyverse)
str_detect(colnames(datos), "global")
A <- colnames(datos)[str_detect(colnames(datos), "global")]
colnames(datos) <- c("Datos global", "datos regional", "datosgobal")
A <- colnames(datos)[str_detect(colnames(datos), "global")]
load("G:/CIMPA/NarccapRDD/Envir.RData")
narccapCOUNT <- function(datos, year, month){
A <- colnames(datos)[str_detect(colnames(datos), "global")]
B <- datos %>% group_by(indicegrid, eval(as.name(A))) %>% summarise(n = n())
G5 <-
ggplot(data = NULL) + geom_histogram(aes(x = indicegrid), bins = 500, color =
"#E69F00") + geom_histogram(
data = B,
aes(x = indicegrid),
color = "#56B4E9",
bins = 500
) + theme_bw() + ylab("Cuenta") + xlab("Índice en el Espacio")
return(G5)
}
narccapCOUNT(JoinnedDF, 1981,1 )
View(JoinnedDF)
narccapCOUNT <- function(datos, year, month){
A <- colnames(datos)[str_detect(colnames(datos), "global")]
B <- datos %>% group_by(indicegrid, eval(as.name(A))) %>% summarise(n = n())
G5 <-
ggplot(data = datos) + geom_histogram(aes(x = indicegrid), bins = 500, color =
"#E69F00") + geom_histogram(
data = B,
aes(x = indicegrid),
color = "#56B4E9",
bins = 500
) + theme_bw() + ylab("Cuenta") + xlab("Índice en el Espacio")
return(G5)
}
narccapCOUNT(JoinnedDF, 1981,1 )
narccapCOUNT <- function(datos, year, month){
A <- colnames(datos)[str_detect(colnames(datos), "global")]
B <- datos %>% group_by(indicegrid, eval(as.name(A))) %>% summarise(n = n())
G5 <-
ggplot(data = datos) + geom_histogram(aes(x = indicegrid), bins = 500, color =
"#E69F00") + geom_histogram(
data = B,
aes(x = indicegrid),
color = "#56B4E9",
bins = 500
) + theme_bw() + ylab("Count") + xlab("Space Index")
return(G5)
}
narccapCOUNT(JoinnedDF, 1981,1 )
install.packages("testthat")
install.packages("covr")
usethis::use_testthat()
library(testthat)
library(NarccapRDD)
test_check("NarccapRDD")
usethis::use_test(name="ArchivoPrueba")
test_check("NarccapRDD")
library(testthat)
library(NarccapRDD)
test_check("NarccapRDD")
library(testthat)
library(NarccapRDD)
test_check("NarccapRDD")
usethis::use_test(name="joinRGdata_test")
usethis::use_test(name="joinRGdata")
usethis::use_data()
usethis::use_data(JoinnedDF, `PRECL Global`, `sic Regional`)
View(`sic Regional`)
View(`PRECL Global`)
View(JoinnedDF)
load("G:/CIMPA/NarccapRDD/data/JoinnedDF.rda")
library(NarccapRDD)
usethis::use_test("narccapMAP")
usethis::use_test("narccapCOUNT")
load("data/sic Regional.rda")
View(`sic Regional`)
View(`sic Regional`)
View(`sic Regional`)
test_that("Function creates a map", {
load("data/sic Regional.rda")
expect_is(narccapMAP(`sic Regional`, "sic", 1985, 1), "data.frame")
})
library(testthat)
test_that("Function creates a map", {
load("data/sic Regional.rda")
expect_is(narccapMAP(`sic Regional`, "sic", 1985, 1), "data.frame")
})
test_that("Function creates a map", {
load("data/sic Regional.rda")
expect_is(narccapMAP(`sic Regional`, "sic", 1985, 1), "ggplot")
})
load("G:/CIMPA/NarccapRDD/data/JoinnedDF.rda")
load("data/JoinnedDF.rda")
load("data/JoinnedDF.rda")
NarccapRDD::ShowData()
DF <- ShowData()
View(DF)
PBA <- DF$Year-c(DF$YearEnd[-length(DF$YearEnd)]-5)
DF$Year[1]-c(DF$YearEnd[-length(DF$YearEnd)]-5)[1]
DF$Year[1]-c(DF$YearEnd[-length(DF$YearEnd)]-1)[1]
DF$Year[1]-c(DF$YearEnd[-length(DF$YearEnd)])[1]
DF$Year[1]-c(DF$YearEnd[-length(DF$YearEnd)])[1]
DF$Year[1]
DF$Year[1]-DF$YearEnd[1]-1
DF$Year[1]-DF$YearEnd[1]+1
PBA <- DF$Year-c(DF$YearEnd[1]+1, DF$YearEnd[-1]+5)
PBA <- DF$Year-c(DF$YearEnd[1]+1, DF$YearEnd[-1]-5)
View(DF)
yearend <- apply(DF$Year, 1, function(x) {
ifelse(x=1968, 1970, x+5)
})
yearend <- apply(DF$Year, 2, function(x) {
ifelse(x=1968, 1970, x+5)
})
str(DF$Year)
class(DF$Year)
yearend <- apply(DF$Year, 1, function(x) {ifelse(x==1968, 1970, x+5)})
yearend <- apply(DF$Year, 1, function(x) ifelse(x==1968, 1970, x+5))
dim(c(1:5))
dim(as.matrix(c(1:5)))
yearend <- apply(as.matrix(DF$Year), 1, function(x) ifelse(x==1968, 1970, x+5))
library(NarccapRDD)
library(NarccapRDD)
library(covr)
covr::package_coverage()
load("data/sic Regional.rda")
load("data/sic Regional.rda")
covr::package_coverage()
